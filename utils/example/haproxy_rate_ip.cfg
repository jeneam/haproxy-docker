defaults
  mode http
  timeout connect 4000ms
  timeout client 50000ms
  timeout server 50000ms

  stats enable
  stats refresh 5s
  stats show-node
  stats uri  /stats/haproxy

global
  log 127.0.0.1:1514 local0 debug
  user haproxy
  group haproxy

frontend fe_app
  log global
  log-format "%ci:%cp [%t] %ft %b/%s %Tq/%Tw/%Tc/%Tr/%Tt %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs {%[ssl_c_verify],%{+Q}[ssl_c_s_dn],%{+Q}[ssl_c_i_dn]} %{+Q}r"
  tcp-request inspect-delay 5s

  # table used to store behaviour of source IPs
  stick-table type ip size 200k expire 30s store  gpc0,conn_rate(10s),http_req_rate(10s)

  # IPs that have gpc0 > 0 are blocked until the go away for at least 5 minutes
  acl source_is_abuser src_get_gpc0 gt 0
  #tcp-request connection reject if source_is_abuser
  
  # connection rate abuses get blocked  (3 requests in 10s, then blocked for
  # 30s)
  acl conn_rate_abuse  sc1_conn_rate gt 3
  acl mark_as_abuser   sc1_inc_gpc0  ge 0
  tcp-request connection track-sc1 src
  #tcp-request connection reject if conn_rate_abuse mark_as_abuser


  reqadd Referer:\ http://zorba.geo.admin.ch
 
  use_backend be_429_slow_down if conn_rate_abuse mark_as_abuser source_is_abuser 

  bind 0.0.0.0:8080 name http
 
  default_backend be_app_stable

backend be_429_slow_down
  timeout tarpit 2s
  errorfile 500 /var/local/429.http
  http-request tarpit

backend be_app_stable
  log global
  http-request replace-value Host .* mf-chsdi3.int.bgdi.ch
  server upstream_server mf-chsdi3.int.bgdi.ch:80 maxconn 512

